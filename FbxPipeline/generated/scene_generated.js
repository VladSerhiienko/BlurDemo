// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var fbxp = fbxp || {};

/**
 * @const
 * @namespace
 */
fbxp.fb = fbxp.fb || {};

/**
 * @enum
 */
fbxp.fb.ECullingType = {
  CullingOff: 0,
  CullingOnCCW: 1,
  CullingOnCW: 2
};

/**
 * @enum
 */
fbxp.fb.EWrapMode = {
  Repeat: 0,
  Clamp: 1
};

/**
 * @enum
 */
fbxp.fb.EBlendMode = {
  Translucent: 0,
  Additive: 1,
  Modulate: 2,
  Modulate2: 3,
  Over: 4
};

/**
 * @enum
 */
fbxp.fb.EVertexFormat = {
  Static: 0
};

/**
 * @enum
 */
fbxp.fb.EVertexTypeFb = {
  Static: 0,
  StaticCompressed: 1,
  Count: 2
};

/**
 * @enum
 */
fbxp.fb.EIndexTypeFb = {
  UInt16: 0,
  UInt16Compressed: 1,
  UInt32: 2,
  UInt32Compressed: 3,
  Count: 4
};

/**
 * @enum
 */
fbxp.fb.EMaterialPropTypeFb = {
  Scalar: 0,
  Color: 1,
  Texture: 2,
  Video: 3
};

/**
 * @constructor
 */
fbxp.fb.vec2 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.vec2}
 */
fbxp.fb.vec2.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.vec2.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
fbxp.fb.vec2.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.vec2.createvec2 = function(builder, x, y) {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.vec3 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.vec3.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.vec3.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
fbxp.fb.vec3.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
fbxp.fb.vec3.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.vec3.createvec3 = function(builder, x, y, z) {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.vec4 = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.vec4}
 */
fbxp.fb.vec4.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.vec4.prototype.x = function() {
  return this.bb.readFloat32(this.bb_pos);
};

/**
 * @returns {number}
 */
fbxp.fb.vec4.prototype.y = function() {
  return this.bb.readFloat32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
fbxp.fb.vec4.prototype.z = function() {
  return this.bb.readFloat32(this.bb_pos + 8);
};

/**
 * @returns {number}
 */
fbxp.fb.vec4.prototype.w = function() {
  return this.bb.readFloat32(this.bb_pos + 12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.vec4.createvec4 = function(builder, x, y, z, w) {
  builder.prep(4, 16);
  builder.writeFloat32(w);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.StaticVertexFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.StaticVertexFb}
 */
fbxp.fb.StaticVertexFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.StaticVertexFb.prototype.position = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.StaticVertexFb.prototype.normal = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {fbxp.fb.vec4=} obj
 * @returns {fbxp.fb.vec4}
 */
fbxp.fb.StaticVertexFb.prototype.tangent = function(obj) {
  return (obj || new fbxp.fb.vec4).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {fbxp.fb.vec2=} obj
 * @returns {fbxp.fb.vec2}
 */
fbxp.fb.StaticVertexFb.prototype.texCoords = function(obj) {
  return (obj || new fbxp.fb.vec2).__init(this.bb_pos + 40, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} position_x
 * @param {number} position_y
 * @param {number} position_z
 * @param {number} normal_x
 * @param {number} normal_y
 * @param {number} normal_z
 * @param {number} tangent_x
 * @param {number} tangent_y
 * @param {number} tangent_z
 * @param {number} tangent_w
 * @param {number} texCoords_x
 * @param {number} texCoords_y
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.StaticVertexFb.createStaticVertexFb = function(builder, position_x, position_y, position_z, normal_x, normal_y, normal_z, tangent_x, tangent_y, tangent_z, tangent_w, texCoords_x, texCoords_y) {
  builder.prep(4, 48);
  builder.prep(4, 8);
  builder.writeFloat32(texCoords_y);
  builder.writeFloat32(texCoords_x);
  builder.prep(4, 16);
  builder.writeFloat32(tangent_w);
  builder.writeFloat32(tangent_z);
  builder.writeFloat32(tangent_y);
  builder.writeFloat32(tangent_x);
  builder.prep(4, 12);
  builder.writeFloat32(normal_z);
  builder.writeFloat32(normal_y);
  builder.writeFloat32(normal_x);
  builder.prep(4, 12);
  builder.writeFloat32(position_z);
  builder.writeFloat32(position_y);
  builder.writeFloat32(position_x);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.TextureFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.TextureFb}
 */
fbxp.fb.TextureFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.TextureFb.prototype.id = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.TextureFb.prototype.nameId = function() {
  return this.bb.readUint64(this.bb_pos + 8);
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.TextureFb.prototype.sourceId = function() {
  return this.bb.readUint64(this.bb_pos + 16);
};

/**
 * @returns {fbxp.fb.EBlendMode}
 */
fbxp.fb.TextureFb.prototype.blendMode = function() {
  return /** @type {fbxp.fb.EBlendMode} */ (this.bb.readUint32(this.bb_pos + 24));
};

/**
 * @returns {fbxp.fb.EWrapMode}
 */
fbxp.fb.TextureFb.prototype.wrapModeU = function() {
  return /** @type {fbxp.fb.EWrapMode} */ (this.bb.readUint32(this.bb_pos + 28));
};

/**
 * @returns {fbxp.fb.EWrapMode}
 */
fbxp.fb.TextureFb.prototype.wrapModeV = function() {
  return /** @type {fbxp.fb.EWrapMode} */ (this.bb.readUint32(this.bb_pos + 32));
};

/**
 * @returns {number}
 */
fbxp.fb.TextureFb.prototype.offsetU = function() {
  return this.bb.readFloat32(this.bb_pos + 36);
};

/**
 * @returns {number}
 */
fbxp.fb.TextureFb.prototype.offsetV = function() {
  return this.bb.readFloat32(this.bb_pos + 40);
};

/**
 * @returns {number}
 */
fbxp.fb.TextureFb.prototype.scaleU = function() {
  return this.bb.readFloat32(this.bb_pos + 44);
};

/**
 * @returns {number}
 */
fbxp.fb.TextureFb.prototype.scaleV = function() {
  return this.bb.readFloat32(this.bb_pos + 48);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {flatbuffers.Long} name_id
 * @param {flatbuffers.Long} source_id
 * @param {fbxp.fb.EBlendMode} blend_mode
 * @param {fbxp.fb.EWrapMode} wrap_mode_u
 * @param {fbxp.fb.EWrapMode} wrap_mode_v
 * @param {number} offset_u
 * @param {number} offset_v
 * @param {number} scale_u
 * @param {number} scale_v
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.TextureFb.createTextureFb = function(builder, id, name_id, source_id, blend_mode, wrap_mode_u, wrap_mode_v, offset_u, offset_v, scale_u, scale_v) {
  builder.prep(8, 56);
  builder.pad(4);
  builder.writeFloat32(scale_v);
  builder.writeFloat32(scale_u);
  builder.writeFloat32(offset_v);
  builder.writeFloat32(offset_u);
  builder.writeInt32(wrap_mode_v);
  builder.writeInt32(wrap_mode_u);
  builder.writeInt32(blend_mode);
  builder.writeInt64(source_id);
  builder.writeInt64(name_id);
  builder.pad(4);
  builder.writeInt32(id);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.SubmeshFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.SubmeshFb}
 */
fbxp.fb.SubmeshFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.baseVertex = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.vertexCount = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.baseIndex = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.indexCount = function() {
  return this.bb.readUint32(this.bb_pos + 12);
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.baseSubset = function() {
  return this.bb.readUint16(this.bb_pos + 16);
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.subsetCount = function() {
  return this.bb.readUint16(this.bb_pos + 18);
};

/**
 * @returns {fbxp.fb.EVertexFormat}
 */
fbxp.fb.SubmeshFb.prototype.vertexFormat = function() {
  return /** @type {fbxp.fb.EVertexFormat} */ (this.bb.readUint32(this.bb_pos + 20));
};

/**
 * @returns {number}
 */
fbxp.fb.SubmeshFb.prototype.vertexStride = function() {
  return this.bb.readUint16(this.bb_pos + 24);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} base_vertex
 * @param {number} vertex_count
 * @param {number} base_index
 * @param {number} index_count
 * @param {number} base_subset
 * @param {number} subset_count
 * @param {fbxp.fb.EVertexFormat} vertex_format
 * @param {number} vertex_stride
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SubmeshFb.createSubmeshFb = function(builder, base_vertex, vertex_count, base_index, index_count, base_subset, subset_count, vertex_format, vertex_stride) {
  builder.prep(4, 28);
  builder.pad(2);
  builder.writeInt16(vertex_stride);
  builder.writeInt32(vertex_format);
  builder.writeInt16(subset_count);
  builder.writeInt16(base_subset);
  builder.writeInt32(index_count);
  builder.writeInt32(base_index);
  builder.writeInt32(vertex_count);
  builder.writeInt32(base_vertex);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.SubsetFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.SubsetFb}
 */
fbxp.fb.SubsetFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
fbxp.fb.SubsetFb.prototype.materialId = function() {
  return this.bb.readUint32(this.bb_pos);
};

/**
 * @returns {number}
 */
fbxp.fb.SubsetFb.prototype.baseIndex = function() {
  return this.bb.readUint32(this.bb_pos + 4);
};

/**
 * @returns {number}
 */
fbxp.fb.SubsetFb.prototype.indexCount = function() {
  return this.bb.readUint32(this.bb_pos + 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} material_id
 * @param {number} base_index
 * @param {number} index_count
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SubsetFb.createSubsetFb = function(builder, material_id, base_index, index_count) {
  builder.prep(4, 12);
  builder.writeInt32(index_count);
  builder.writeInt32(base_index);
  builder.writeInt32(material_id);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.NameFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.NameFb}
 */
fbxp.fb.NameFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fbxp.fb.NameFb=} obj
 * @returns {fbxp.fb.NameFb}
 */
fbxp.fb.NameFb.getRootAsNameFb = function(bb, obj) {
  return (obj || new fbxp.fb.NameFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.NameFb.prototype.h = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
fbxp.fb.NameFb.prototype.v = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fbxp.fb.NameFb.startNameFb = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} h
 */
fbxp.fb.NameFb.addH = function(builder, h) {
  builder.addFieldInt64(0, h, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} vOffset
 */
fbxp.fb.NameFb.addV = function(builder, vOffset) {
  builder.addFieldOffset(1, vOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.NameFb.endNameFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
fbxp.fb.TransformFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.TransformFb}
 */
fbxp.fb.TransformFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.translation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.rotationOffset = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.rotationPivot = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 24, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.preRotation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 36, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.postRotation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 48, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.rotation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 60, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.scalingOffset = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 72, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.scalingPivot = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 84, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.scaling = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 96, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.geometricTranslation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 108, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.geometricRotation = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 120, this.bb);
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.TransformFb.prototype.geometricScaling = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 132, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} translation_x
 * @param {number} translation_y
 * @param {number} translation_z
 * @param {number} rotation_offset_x
 * @param {number} rotation_offset_y
 * @param {number} rotation_offset_z
 * @param {number} rotation_pivot_x
 * @param {number} rotation_pivot_y
 * @param {number} rotation_pivot_z
 * @param {number} pre_rotation_x
 * @param {number} pre_rotation_y
 * @param {number} pre_rotation_z
 * @param {number} post_rotation_x
 * @param {number} post_rotation_y
 * @param {number} post_rotation_z
 * @param {number} rotation_x
 * @param {number} rotation_y
 * @param {number} rotation_z
 * @param {number} scaling_offset_x
 * @param {number} scaling_offset_y
 * @param {number} scaling_offset_z
 * @param {number} scaling_pivot_x
 * @param {number} scaling_pivot_y
 * @param {number} scaling_pivot_z
 * @param {number} scaling_x
 * @param {number} scaling_y
 * @param {number} scaling_z
 * @param {number} geometric_translation_x
 * @param {number} geometric_translation_y
 * @param {number} geometric_translation_z
 * @param {number} geometric_rotation_x
 * @param {number} geometric_rotation_y
 * @param {number} geometric_rotation_z
 * @param {number} geometric_scaling_x
 * @param {number} geometric_scaling_y
 * @param {number} geometric_scaling_z
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.TransformFb.createTransformFb = function(builder, translation_x, translation_y, translation_z, rotation_offset_x, rotation_offset_y, rotation_offset_z, rotation_pivot_x, rotation_pivot_y, rotation_pivot_z, pre_rotation_x, pre_rotation_y, pre_rotation_z, post_rotation_x, post_rotation_y, post_rotation_z, rotation_x, rotation_y, rotation_z, scaling_offset_x, scaling_offset_y, scaling_offset_z, scaling_pivot_x, scaling_pivot_y, scaling_pivot_z, scaling_x, scaling_y, scaling_z, geometric_translation_x, geometric_translation_y, geometric_translation_z, geometric_rotation_x, geometric_rotation_y, geometric_rotation_z, geometric_scaling_x, geometric_scaling_y, geometric_scaling_z) {
  builder.prep(4, 144);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_scaling_z);
  builder.writeFloat32(geometric_scaling_y);
  builder.writeFloat32(geometric_scaling_x);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_rotation_z);
  builder.writeFloat32(geometric_rotation_y);
  builder.writeFloat32(geometric_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(geometric_translation_z);
  builder.writeFloat32(geometric_translation_y);
  builder.writeFloat32(geometric_translation_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_z);
  builder.writeFloat32(scaling_y);
  builder.writeFloat32(scaling_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_pivot_z);
  builder.writeFloat32(scaling_pivot_y);
  builder.writeFloat32(scaling_pivot_x);
  builder.prep(4, 12);
  builder.writeFloat32(scaling_offset_z);
  builder.writeFloat32(scaling_offset_y);
  builder.writeFloat32(scaling_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_z);
  builder.writeFloat32(rotation_y);
  builder.writeFloat32(rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(post_rotation_z);
  builder.writeFloat32(post_rotation_y);
  builder.writeFloat32(post_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(pre_rotation_z);
  builder.writeFloat32(pre_rotation_y);
  builder.writeFloat32(pre_rotation_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_pivot_z);
  builder.writeFloat32(rotation_pivot_y);
  builder.writeFloat32(rotation_pivot_x);
  builder.prep(4, 12);
  builder.writeFloat32(rotation_offset_z);
  builder.writeFloat32(rotation_offset_y);
  builder.writeFloat32(rotation_offset_x);
  builder.prep(4, 12);
  builder.writeFloat32(translation_z);
  builder.writeFloat32(translation_y);
  builder.writeFloat32(translation_x);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.MeshFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.MeshFb}
 */
fbxp.fb.MeshFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fbxp.fb.MeshFb=} obj
 * @returns {fbxp.fb.MeshFb}
 */
fbxp.fb.MeshFb.getRootAsMeshFb = function(bb, obj) {
  return (obj || new fbxp.fb.MeshFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.polygons = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.polygonsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
fbxp.fb.MeshFb.prototype.polygonsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.MeshFb.prototype.ctrlPoints = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new fbxp.fb.vec3).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.ctrlPointsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.vertices = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.verticesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
fbxp.fb.MeshFb.prototype.verticesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.indices = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.indicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
fbxp.fb.MeshFb.prototype.indicesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {fbxp.fb.SubmeshFb=} obj
 * @returns {fbxp.fb.SubmeshFb}
 */
fbxp.fb.MeshFb.prototype.submeshes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new fbxp.fb.SubmeshFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 28, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.submeshesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.SubsetFb=} obj
 * @returns {fbxp.fb.SubsetFb}
 */
fbxp.fb.MeshFb.prototype.subsets = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new fbxp.fb.SubsetFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.subsetsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.SubsetFb=} obj
 * @returns {fbxp.fb.SubsetFb}
 */
fbxp.fb.MeshFb.prototype.subsetPolies = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new fbxp.fb.SubsetFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 12, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.subsetPoliesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.subsetIndices = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.MeshFb.prototype.subsetIndicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
fbxp.fb.MeshFb.prototype.subsetIndicesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {fbxp.fb.EIndexTypeFb}
 */
fbxp.fb.MeshFb.prototype.indexType = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? /** @type {fbxp.fb.EIndexTypeFb} */ (this.bb.readUint32(this.bb_pos + offset)) : fbxp.fb.EIndexTypeFb.UInt16;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fbxp.fb.MeshFb.startMeshFb = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} polygonsOffset
 */
fbxp.fb.MeshFb.addPolygons = function(builder, polygonsOffset) {
  builder.addFieldOffset(0, polygonsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MeshFb.createPolygonsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startPolygonsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ctrlPointsOffset
 */
fbxp.fb.MeshFb.addCtrlPoints = function(builder, ctrlPointsOffset) {
  builder.addFieldOffset(1, ctrlPointsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startCtrlPointsVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} verticesOffset
 */
fbxp.fb.MeshFb.addVertices = function(builder, verticesOffset) {
  builder.addFieldOffset(2, verticesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MeshFb.createVerticesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startVerticesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} indicesOffset
 */
fbxp.fb.MeshFb.addIndices = function(builder, indicesOffset) {
  builder.addFieldOffset(3, indicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MeshFb.createIndicesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startIndicesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} submeshesOffset
 */
fbxp.fb.MeshFb.addSubmeshes = function(builder, submeshesOffset) {
  builder.addFieldOffset(4, submeshesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startSubmeshesVector = function(builder, numElems) {
  builder.startVector(28, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} subsetsOffset
 */
fbxp.fb.MeshFb.addSubsets = function(builder, subsetsOffset) {
  builder.addFieldOffset(5, subsetsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startSubsetsVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} subsetPoliesOffset
 */
fbxp.fb.MeshFb.addSubsetPolies = function(builder, subsetPoliesOffset) {
  builder.addFieldOffset(6, subsetPoliesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startSubsetPoliesVector = function(builder, numElems) {
  builder.startVector(12, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} subsetIndicesOffset
 */
fbxp.fb.MeshFb.addSubsetIndices = function(builder, subsetIndicesOffset) {
  builder.addFieldOffset(7, subsetIndicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MeshFb.createSubsetIndicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MeshFb.startSubsetIndicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {fbxp.fb.EIndexTypeFb} indexType
 */
fbxp.fb.MeshFb.addIndexType = function(builder, indexType) {
  builder.addFieldInt32(8, indexType, fbxp.fb.EIndexTypeFb.UInt16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MeshFb.endMeshFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
fbxp.fb.MaterialPropFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.MaterialPropFb}
 */
fbxp.fb.MaterialPropFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.MaterialPropFb.prototype.nameId = function() {
  return this.bb.readUint64(this.bb_pos);
};

/**
 * @returns {fbxp.fb.EMaterialPropTypeFb}
 */
fbxp.fb.MaterialPropFb.prototype.type = function() {
  return /** @type {fbxp.fb.EMaterialPropTypeFb} */ (this.bb.readUint32(this.bb_pos + 8));
};

/**
 * @param {fbxp.fb.vec3=} obj
 * @returns {fbxp.fb.vec3}
 */
fbxp.fb.MaterialPropFb.prototype.value = function(obj) {
  return (obj || new fbxp.fb.vec3).__init(this.bb_pos + 12, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} name_id
 * @param {fbxp.fb.EMaterialPropTypeFb} type
 * @param {number} value_x
 * @param {number} value_y
 * @param {number} value_z
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MaterialPropFb.createMaterialPropFb = function(builder, name_id, type, value_x, value_y, value_z) {
  builder.prep(8, 24);
  builder.prep(4, 12);
  builder.writeFloat32(value_z);
  builder.writeFloat32(value_y);
  builder.writeFloat32(value_x);
  builder.writeInt32(type);
  builder.writeInt64(name_id);
  return builder.offset();
};

/**
 * @constructor
 */
fbxp.fb.MaterialFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.MaterialFb}
 */
fbxp.fb.MaterialFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fbxp.fb.MaterialFb=} obj
 * @returns {fbxp.fb.MaterialFb}
 */
fbxp.fb.MaterialFb.getRootAsMaterialFb = function(bb, obj) {
  return (obj || new fbxp.fb.MaterialFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
fbxp.fb.MaterialFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.MaterialFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {number} index
 * @param {fbxp.fb.MaterialPropFb=} obj
 * @returns {fbxp.fb.MaterialPropFb}
 */
fbxp.fb.MaterialFb.prototype.props = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new fbxp.fb.MaterialPropFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.MaterialFb.prototype.propsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fbxp.fb.MaterialFb.startMaterialFb = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
fbxp.fb.MaterialFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} nameId
 */
fbxp.fb.MaterialFb.addNameId = function(builder, nameId) {
  builder.addFieldInt64(1, nameId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propsOffset
 */
fbxp.fb.MaterialFb.addProps = function(builder, propsOffset) {
  builder.addFieldOffset(2, propsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.MaterialFb.startPropsVector = function(builder, numElems) {
  builder.startVector(24, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.MaterialFb.endMaterialFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
fbxp.fb.NodeFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.NodeFb}
 */
fbxp.fb.NodeFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fbxp.fb.NodeFb=} obj
 * @returns {fbxp.fb.NodeFb}
 */
fbxp.fb.NodeFb.getRootAsNodeFb = function(bb, obj) {
  return (obj || new fbxp.fb.NodeFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.childIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.childIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
fbxp.fb.NodeFb.prototype.childIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.materialIds = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.materialIdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint32Array}
 */
fbxp.fb.NodeFb.prototype.materialIdsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.NodeFb.prototype.meshId = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
fbxp.fb.NodeFb.prototype.nameId = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {fbxp.fb.ECullingType}
 */
fbxp.fb.NodeFb.prototype.cullingType = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? /** @type {fbxp.fb.ECullingType} */ (this.bb.readUint32(this.bb_pos + offset)) : fbxp.fb.ECullingType.CullingOff;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fbxp.fb.NodeFb.startNodeFb = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
fbxp.fb.NodeFb.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} childIdsOffset
 */
fbxp.fb.NodeFb.addChildIds = function(builder, childIdsOffset) {
  builder.addFieldOffset(1, childIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.NodeFb.createChildIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.NodeFb.startChildIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} materialIdsOffset
 */
fbxp.fb.NodeFb.addMaterialIds = function(builder, materialIdsOffset) {
  builder.addFieldOffset(2, materialIdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.NodeFb.createMaterialIdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.NodeFb.startMaterialIdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} meshId
 */
fbxp.fb.NodeFb.addMeshId = function(builder, meshId) {
  builder.addFieldInt32(3, meshId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} nameId
 */
fbxp.fb.NodeFb.addNameId = function(builder, nameId) {
  builder.addFieldInt64(4, nameId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {fbxp.fb.ECullingType} cullingType
 */
fbxp.fb.NodeFb.addCullingType = function(builder, cullingType) {
  builder.addFieldInt32(5, cullingType, fbxp.fb.ECullingType.CullingOff);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.NodeFb.endNodeFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
fbxp.fb.SceneFb = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {fbxp.fb.SceneFb}
 */
fbxp.fb.SceneFb.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {fbxp.fb.SceneFb=} obj
 * @returns {fbxp.fb.SceneFb}
 */
fbxp.fb.SceneFb.getRootAsSceneFb = function(bb, obj) {
  return (obj || new fbxp.fb.SceneFb).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
fbxp.fb.SceneFb.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('FBXP');
};

/**
 * @param {number} index
 * @param {fbxp.fb.TransformFb=} obj
 * @returns {fbxp.fb.TransformFb}
 */
fbxp.fb.SceneFb.prototype.transforms = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new fbxp.fb.TransformFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 144, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.transformsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.NodeFb=} obj
 * @returns {fbxp.fb.NodeFb}
 */
fbxp.fb.SceneFb.prototype.nodes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new fbxp.fb.NodeFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.nodesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.MeshFb=} obj
 * @returns {fbxp.fb.MeshFb}
 */
fbxp.fb.SceneFb.prototype.meshes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new fbxp.fb.MeshFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.meshesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.MaterialFb=} obj
 * @returns {fbxp.fb.MaterialFb}
 */
fbxp.fb.SceneFb.prototype.materials = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new fbxp.fb.MaterialFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.materialsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.TextureFb=} obj
 * @returns {fbxp.fb.TextureFb}
 */
fbxp.fb.SceneFb.prototype.textures = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new fbxp.fb.TextureFb).__init(this.bb.__vector(this.bb_pos + offset) + index * 56, this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.texturesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {fbxp.fb.NameFb=} obj
 * @returns {fbxp.fb.NameFb}
 */
fbxp.fb.SceneFb.prototype.names = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new fbxp.fb.NameFb).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
fbxp.fb.SceneFb.prototype.namesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
fbxp.fb.SceneFb.startSceneFb = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} transformsOffset
 */
fbxp.fb.SceneFb.addTransforms = function(builder, transformsOffset) {
  builder.addFieldOffset(0, transformsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startTransformsVector = function(builder, numElems) {
  builder.startVector(144, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodesOffset
 */
fbxp.fb.SceneFb.addNodes = function(builder, nodesOffset) {
  builder.addFieldOffset(1, nodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SceneFb.createNodesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startNodesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} meshesOffset
 */
fbxp.fb.SceneFb.addMeshes = function(builder, meshesOffset) {
  builder.addFieldOffset(2, meshesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SceneFb.createMeshesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startMeshesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} materialsOffset
 */
fbxp.fb.SceneFb.addMaterials = function(builder, materialsOffset) {
  builder.addFieldOffset(3, materialsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SceneFb.createMaterialsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startMaterialsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} texturesOffset
 */
fbxp.fb.SceneFb.addTextures = function(builder, texturesOffset) {
  builder.addFieldOffset(4, texturesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startTexturesVector = function(builder, numElems) {
  builder.startVector(56, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} namesOffset
 */
fbxp.fb.SceneFb.addNames = function(builder, namesOffset) {
  builder.addFieldOffset(5, namesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SceneFb.createNamesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
fbxp.fb.SceneFb.startNamesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
fbxp.fb.SceneFb.endSceneFb = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
fbxp.fb.SceneFb.finishSceneFbBuffer = function(builder, offset) {
  builder.finish(offset, 'FBXP');
};

// Exports for Node.js and RequireJS
this.fbxp = fbxp;
